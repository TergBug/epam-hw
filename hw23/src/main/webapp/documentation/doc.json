{
  "swagger": "2.0",
  "info": {
    "description": "This is a CRUD REST API DeveloperCRUD",
    "version": "1.0.0",
    "title": "DeveloperCRUD",
    "termsOfService": "https://github.com/TergBug"
  },
  "host": "developercrud.herokuapp.com",
  "basePath": "/",
  "tags": [
    {
      "name": "skill",
      "description": "Developer`s skill"
    },
    {
      "name": "account",
      "description": "Developer`s account"
    },
    {
      "name": "developer",
      "description": "Developer`s info"
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/api/v1/skills/{id}": {
      "get": {
        "tags": [
          "skill"
        ],
        "summary": "Get skill by id",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of skill",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Skill"
            }
          },
          "400": {
            "description": "Invalid parameter id"
          },
          "404": {
            "description": "No such id"
          }
        }
      },
      "delete": {
        "tags": [
          "skill"
        ],
        "summary": "Delete skill",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of skill",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Invalid parameter id"
          },
          "404": {
            "description": "No such id"
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    },
    "/api/v1/skills": {
      "get": {
        "tags": [
          "skill"
        ],
        "summary": "Get all skills",
        "description": "",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/Skill"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "skill"
        ],
        "summary": "Add a new skill",
        "description": "",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "skill",
            "schema": {
              "$ref": "#/definitions/Skill"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Cannot create entry, maybe this entry has already created"
          }
        }
      },
      "put": {
        "tags": [
          "skill"
        ],
        "summary": "Update an existing skill",
        "description": "",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "skill",
            "schema": {
              "$ref": "#/definitions/Skill"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "No such entry"
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    },
    "/api/v1/accounts/{id}": {
      "get": {
        "tags": [
          "account"
        ],
        "summary": "Get account by id",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of account",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          },
          "400": {
            "description": "Invalid parameter id"
          },
          "404": {
            "description": "No such id"
          }
        }
      },
      "delete": {
        "tags": [
          "account"
        ],
        "summary": "Delete account",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of account",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Invalid parameter id"
          },
          "404": {
            "description": "No such id"
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    },
    "/api/v1/accounts": {
      "get": {
        "tags": [
          "account"
        ],
        "summary": "Get all accounts",
        "description": "",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/Account"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "account"
        ],
        "summary": "Add a new account",
        "description": "",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "account",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Cannot create entry, maybe this entry has already created"
          }
        }
      },
      "put": {
        "tags": [
          "account"
        ],
        "summary": "Update an existing account",
        "description": "",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "account",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "No such entry"
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    },
    "/api/v1/developers/{id}": {
      "get": {
        "tags": [
          "developer"
        ],
        "summary": "Get developer by id",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of developer",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Developer"
            }
          },
          "400": {
            "description": "Invalid parameter id"
          },
          "404": {
            "description": "No such id"
          }
        }
      },
      "delete": {
        "tags": [
          "developer"
        ],
        "summary": "Delete developer",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of developer",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Invalid parameter id"
          },
          "404": {
            "description": "No such id"
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    },
    "/api/v1/developers": {
      "get": {
        "tags": [
          "developer"
        ],
        "summary": "Get all developers",
        "description": "",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/Developer"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "developer"
        ],
        "summary": "Add a new developer",
        "description": "",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "developer",
            "schema": {
              "$ref": "#/definitions/Developer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Cannot create entry, maybe this entry has already created"
          }
        }
      },
      "put": {
        "tags": [
          "developer"
        ],
        "summary": "Update an existing developer",
        "description": "",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "developer",
            "schema": {
              "$ref": "#/definitions/Developer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "No such entry"
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    }
  },
  "definitions": {
    "Skill": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Account": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ACTIVE",
            "BANNED",
            "DELETED"
          ]
        }
      }
    },
    "Developer": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "skills": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Skill"
          }
        },
        "account": {
          "$ref": "#/definitions/Account"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}